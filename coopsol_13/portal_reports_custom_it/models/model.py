from odoo import _, api, fields, models# from odoo.http import request, Responseimport base64from collections import OrderedDictfrom odoo.exceptions import ValidationErrorfrom odoo import httpfrom odoo.exceptions import AccessError, MissingErrorfrom odoo.http import requestfrom odoo.tools import image_processfrom odoo.tools.translate import _from odoo.addons.portal.controllers.portal import pager as portal_pager, CustomerPortalfrom odoo.addons.web.controllers.main import Binaryclass CustomerPortal(CustomerPortal):    @http.route('/my/orders/pdf/<int:order_id>', methods=['POST', 'GET'], csrf=False, type='http', auth="user", website=True)    def portal_my_sale_pdf(self, **kw):        order_id = kw['order_id']        order_id = request.env['sale.order'].search( [('id', '=', order_id)] )        if order_id:            pdf = order_id.get_sale_order_print_it()            pdf = request.env['popup.it'].search( [('id', '=', int(pdf['res_id']))] ).output_file            # raise ValidationError(str(pdf))            pdf = base64.decodestring(pdf)            pdfhttpheaders = [('Content-Type', 'application/pdf'), ('Content-Length', len(pdf))]            return request.make_response(pdf, headers=pdfhttpheaders)    @http.route('/my/orders/pdf/download/<int:order_id>', methods=['POST', 'GET'], csrf=False, type='http', auth="user", website=True)    def portal_my_sale_download_pdf(self, **kw):        order_id = kw['order_id']        order_id = request.env['sale.order'].search( [('id', '=', order_id)] )        if order_id:            pdf = order_id.get_sale_order_print_it()            pdf = request.env['popup.it'].search( [('id', '=', int(pdf['res_id']))] ).output_file            # raise ValidationError(str(pdf))            pdf = base64.b64decode(pdf)            pdfhttpheaders = [('Content-Type', 'application/pdf'), ('Content-Length', len(pdf))]            return request.make_response(pdf, [('Content-Type', 'application/pdf')])